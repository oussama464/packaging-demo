name: Build, Test , Publish

on:
    pull_request:
        types: [opened,synchronize]
    push:
        branches:
            - main
    workflow_dispatch:


jobs:
    check-version-txt:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-tags: true

        - name: Tag release version
          run: |
            git tag $(cat version.txt)


    lint-format-and-static-code-checks:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Tag release version
          run: |
            pip install pre-commit
        - name: lint ,format , and otheter static code checks
          run:
              /bin/bash +x run.sh lint:ci

    build-wheel-and-sdist:
        needs:
          -  lint-format-and-static-code-checks
          -  check-version-txt

        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
        - name: Set up Python 3.8
          uses: actions/setup-python@v3
          with:
            python-version: 3.8


        # - name: cache deps
        #   uses: actions/cache@v3
        #   with:
        #       path: ~/.cache/pip
        #       key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt','**/pyproject.toml') }}
        #       restore-keys: |
        #         ${{ runner.os }}-pip-

        - name: install nuild cli
          run: |
            pip install build
        - name: build
          run: |
            /bin/bash -x run.sh build

        - name: upload wheel an sdist
          uses: actions/upload-artifact@v4
          with:
            name: wheel-and-sdist
            path: ./dist/*


    publish:
      needs:
        - build-wheel-and-sdist
        - lint-format-and-static-code-checks
        - check-version-txt

      runs-on: ubuntu-latest
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      steps:
          - uses: actions/checkout@v4
          - name: Set up Python 3.8
            uses: actions/setup-python@v3
            with:
              python-version: 3.8

          - name: download wheel and sdist
            uses: actions/download-artifact@v4
            with:
              name: wheel-and-sdist
              path: ./dist/
          - name: install twine
            run: |
              pip install twine

          - name: Publish to TestPypi
            run: |
              /bin/bash -x run.sh publish:test
            env:
              TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}

          - name: Publish to ProdPypi
            run: |
              /bin/bash -x run.sh publish:prod
            env:
              TEST_PYPI_TOKEN: ${{ secrets.PROD_PYPI_TOKEN }}

          - name: Push tags
            run: |
              git push origin --tags