name: Build, Test , Publish

on:
    pull_request:
        types: [opened,synchronize]
    push:
        branches:
            - main
    workflow_dispatch:


jobs:
    dump-context-to-log:
        runs-on: ubuntu-latest
        steps:
          - name: Dump GitHub context
            env:
              GITHUB_CONTEXT: ${{ toJson(github) }}
            run: echo "$GITHUB_CONTEXT"
          - name: Dump job context
            env:
              JOB_CONTEXT: ${{ toJson(job) }}
            run: echo "$JOB_CONTEXT"
          - name: Dump steps context
            env:
              STEPS_CONTEXT: ${{ toJson(steps) }}
            run: echo "$STEPS_CONTEXT"
          - name: Dump runner context
            env:
              RUNNER_CONTEXT: ${{ toJson(runner) }}
            run: echo "$RUNNER_CONTEXT"
          - name: Dump strategy context
            env:
              STRATEGY_CONTEXT: ${{ toJson(strategy) }}
            run: echo "$STRATEGY_CONTEXT"
    build-test-and-publish:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
          with:
            fetch-tags: true
        - name: Set up Python 3.8
          uses: actions/setup-python@v3
          with:
            python-version: 3.8
        - name: Tag release version
          run: |
            git tag $(cat version.txt)
        - name: install
          run: |
            /bin/bash -x run.sh install
        - name: lint , format and other static checks
          run: |
            /bin/bash +x run.sh lint:ci
        - name: build
          run: |
            /bin/bash -x run.sh build

        - name: Publish to TestPypi
          if: github.event_name == 'push' && github.ref == 'refs/heads/merge'
          run: |
            /bin/bash -x publish:test
          env:
            TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}

        - name: Publish to ProdPypi
          if: github.event_name == 'push' && github.ref == 'refs/heads/merge'
          run: |
            /bin/bash -x publish:prod
          env:
            TEST_PYPI_TOKEN: ${{ secrets.PROD_PYPI_TOKEN }}

        - name: Push tags
          if: github.event_name == 'push' && github.ref == 'refs/heads/merge'
          run: |
            git push origin --tags
